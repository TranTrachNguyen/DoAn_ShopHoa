#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShopHoa.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ShopHoa")]
	public partial class dbShopHoaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDangKy(DangKy instance);
    partial void UpdateDangKy(DangKy instance);
    partial void DeleteDangKy(DangKy instance);
    partial void InsertMauSac(MauSac instance);
    partial void UpdateMauSac(MauSac instance);
    partial void DeleteMauSac(MauSac instance);
    partial void InsertDoanhThu(DoanhThu instance);
    partial void UpdateDoanhThu(DoanhThu instance);
    partial void DeleteDoanhThu(DoanhThu instance);
    partial void InsertDonDatHang(DonDatHang instance);
    partial void UpdateDonDatHang(DonDatHang instance);
    partial void DeleteDonDatHang(DonDatHang instance);
    partial void InsertGioHang(GioHang instance);
    partial void UpdateGioHang(GioHang instance);
    partial void DeleteGioHang(GioHang instance);
    partial void InsertHoa(Hoa instance);
    partial void UpdateHoa(Hoa instance);
    partial void DeleteHoa(Hoa instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiHoa(LoaiHoa instance);
    partial void UpdateLoaiHoa(LoaiHoa instance);
    partial void DeleteLoaiHoa(LoaiHoa instance);
    #endregion
		
		public dbShopHoaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbShopHoaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbShopHoaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbShopHoaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
        public dbShopHoaDataContext() : this(@"Data Source=MSI\SQLEXPRESS;Initial Catalog=ShopHoa;Integrated Security=True")
        {
        }
        public System.Data.Linq.Table<DangKy> DangKies
		{
			get
			{
				return this.GetTable<DangKy>();
			}
		}
		
		public System.Data.Linq.Table<MauSac> MauSacs
		{
			get
			{
				return this.GetTable<MauSac>();
			}
		}
		
		public System.Data.Linq.Table<DoanhThu> DoanhThus
		{
			get
			{
				return this.GetTable<DoanhThu>();
			}
		}
		
		public System.Data.Linq.Table<DonDatHang> DonDatHangs
		{
			get
			{
				return this.GetTable<DonDatHang>();
			}
		}
		
		public System.Data.Linq.Table<GioHang> GioHangs
		{
			get
			{
				return this.GetTable<GioHang>();
			}
		}
		
		public System.Data.Linq.Table<Hoa> Hoas
		{
			get
			{
				return this.GetTable<Hoa>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiHoa> LoaiHoas
		{
			get
			{
				return this.GetTable<LoaiHoa>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DangKy")]
	public partial class DangKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDangKy;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private string _VaiTroNguoiDung;
		
		private EntitySet<KhachHang> _KhachHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDangKyChanging(int value);
    partial void OnMaDangKyChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnVaiTroNguoiDungChanging(string value);
    partial void OnVaiTroNguoiDungChanged();
    #endregion
		
		public DangKy()
		{
			this._KhachHangs = new EntitySet<KhachHang>(new Action<KhachHang>(this.attach_KhachHangs), new Action<KhachHang>(this.detach_KhachHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDangKy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDangKy
		{
			get
			{
				return this._MaDangKy;
			}
			set
			{
				if ((this._MaDangKy != value))
				{
					this.OnMaDangKyChanging(value);
					this.SendPropertyChanging();
					this._MaDangKy = value;
					this.SendPropertyChanged("MaDangKy");
					this.OnMaDangKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VaiTroNguoiDung", DbType="NVarChar(20)")]
		public string VaiTroNguoiDung
		{
			get
			{
				return this._VaiTroNguoiDung;
			}
			set
			{
				if ((this._VaiTroNguoiDung != value))
				{
					this.OnVaiTroNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._VaiTroNguoiDung = value;
					this.SendPropertyChanged("VaiTroNguoiDung");
					this.OnVaiTroNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DangKy_KhachHang", Storage="_KhachHangs", ThisKey="MaDangKy", OtherKey="MaDangKy")]
		public EntitySet<KhachHang> KhachHangs
		{
			get
			{
				return this._KhachHangs;
			}
			set
			{
				this._KhachHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.DangKy = this;
		}
		
		private void detach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.DangKy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MauSac")]
	public partial class MauSac : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMau;
		
		private string _TenMau;
		
		private EntitySet<Hoa> _Hoas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMauChanging(int value);
    partial void OnMaMauChanged();
    partial void OnTenMauChanging(string value);
    partial void OnTenMauChanged();
    #endregion
		
		public MauSac()
		{
			this._Hoas = new EntitySet<Hoa>(new Action<Hoa>(this.attach_Hoas), new Action<Hoa>(this.detach_Hoas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMau", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaMau
		{
			get
			{
				return this._MaMau;
			}
			set
			{
				if ((this._MaMau != value))
				{
					this.OnMaMauChanging(value);
					this.SendPropertyChanging();
					this._MaMau = value;
					this.SendPropertyChanged("MaMau");
					this.OnMaMauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMau", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenMau
		{
			get
			{
				return this._TenMau;
			}
			set
			{
				if ((this._TenMau != value))
				{
					this.OnTenMauChanging(value);
					this.SendPropertyChanging();
					this._TenMau = value;
					this.SendPropertyChanged("TenMau");
					this.OnTenMauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MauSac_Hoa", Storage="_Hoas", ThisKey="MaMau", OtherKey="MaMau")]
		public EntitySet<Hoa> Hoas
		{
			get
			{
				return this._Hoas;
			}
			set
			{
				this._Hoas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hoas(Hoa entity)
		{
			this.SendPropertyChanging();
			entity.MauSac = this;
		}
		
		private void detach_Hoas(Hoa entity)
		{
			this.SendPropertyChanging();
			entity.MauSac = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoanhThu")]
	public partial class DoanhThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDoanhThu;
		
		private System.Nullable<int> _MaDonHang;
		
		private System.Nullable<System.DateTime> _NgayGiaoHang;
		
		private System.Nullable<decimal> _TongDoanhThu;
		
		private EntityRef<DonDatHang> _DonDatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDoanhThuChanging(int value);
    partial void OnMaDoanhThuChanged();
    partial void OnMaDonHangChanging(System.Nullable<int> value);
    partial void OnMaDonHangChanged();
    partial void OnNgayGiaoHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaoHangChanged();
    partial void OnTongDoanhThuChanging(System.Nullable<decimal> value);
    partial void OnTongDoanhThuChanged();
    #endregion
		
		public DoanhThu()
		{
			this._DonDatHang = default(EntityRef<DonDatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDoanhThu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDoanhThu
		{
			get
			{
				return this._MaDoanhThu;
			}
			set
			{
				if ((this._MaDoanhThu != value))
				{
					this.OnMaDoanhThuChanging(value);
					this.SendPropertyChanging();
					this._MaDoanhThu = value;
					this.SendPropertyChanged("MaDoanhThu");
					this.OnMaDoanhThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonHang", DbType="Int")]
		public System.Nullable<int> MaDonHang
		{
			get
			{
				return this._MaDonHang;
			}
			set
			{
				if ((this._MaDonHang != value))
				{
					if (this._DonDatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDonHangChanging(value);
					this.SendPropertyChanging();
					this._MaDonHang = value;
					this.SendPropertyChanged("MaDonHang");
					this.OnMaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiaoHang", DbType="Date")]
		public System.Nullable<System.DateTime> NgayGiaoHang
		{
			get
			{
				return this._NgayGiaoHang;
			}
			set
			{
				if ((this._NgayGiaoHang != value))
				{
					this.OnNgayGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._NgayGiaoHang = value;
					this.SendPropertyChanged("NgayGiaoHang");
					this.OnNgayGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongDoanhThu", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TongDoanhThu
		{
			get
			{
				return this._TongDoanhThu;
			}
			set
			{
				if ((this._TongDoanhThu != value))
				{
					this.OnTongDoanhThuChanging(value);
					this.SendPropertyChanging();
					this._TongDoanhThu = value;
					this.SendPropertyChanged("TongDoanhThu");
					this.OnTongDoanhThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_DoanhThu", Storage="_DonDatHang", ThisKey="MaDonHang", OtherKey="MaDonHang", IsForeignKey=true)]
		public DonDatHang DonDatHang
		{
			get
			{
				return this._DonDatHang.Entity;
			}
			set
			{
				DonDatHang previousValue = this._DonDatHang.Entity;
				if (((previousValue != value) 
							|| (this._DonDatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDatHang.Entity = null;
						previousValue.DoanhThus.Remove(this);
					}
					this._DonDatHang.Entity = value;
					if ((value != null))
					{
						value.DoanhThus.Add(this);
						this._MaDonHang = value.MaDonHang;
					}
					else
					{
						this._MaDonHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("DonDatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonDatHang")]
	public partial class DonDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDonHang;
		
		private System.Nullable<int> _MaKhachHang;
		
		private System.Nullable<System.DateTime> _NgayDatHang;
		
		private string _TenKhachHang;
		
		private string _DiaChiGiaoHang;
		
		private string _SoDienThoai;
		
		private System.Nullable<int> _SoLuong;
		
		private string _TrangThaiDonHang;
		
		private System.Nullable<decimal> _TongGiaTriDonHang;
		
		private EntitySet<DoanhThu> _DoanhThus;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDonHangChanging(int value);
    partial void OnMaDonHangChanged();
    partial void OnMaKhachHangChanging(System.Nullable<int> value);
    partial void OnMaKhachHangChanged();
    partial void OnNgayDatHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDatHangChanged();
    partial void OnTenKhachHangChanging(string value);
    partial void OnTenKhachHangChanged();
    partial void OnDiaChiGiaoHangChanging(string value);
    partial void OnDiaChiGiaoHangChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTrangThaiDonHangChanging(string value);
    partial void OnTrangThaiDonHangChanged();
    partial void OnTongGiaTriDonHangChanging(System.Nullable<decimal> value);
    partial void OnTongGiaTriDonHangChanged();
    #endregion
		
		public DonDatHang()
		{
			this._DoanhThus = new EntitySet<DoanhThu>(new Action<DoanhThu>(this.attach_DoanhThus), new Action<DoanhThu>(this.detach_DoanhThus));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDonHang
		{
			get
			{
				return this._MaDonHang;
			}
			set
			{
				if ((this._MaDonHang != value))
				{
					this.OnMaDonHangChanging(value);
					this.SendPropertyChanging();
					this._MaDonHang = value;
					this.SendPropertyChanged("MaDonHang");
					this.OnMaDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="Int")]
		public System.Nullable<int> MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDatHang", DbType="Date")]
		public System.Nullable<System.DateTime> NgayDatHang
		{
			get
			{
				return this._NgayDatHang;
			}
			set
			{
				if ((this._NgayDatHang != value))
				{
					this.OnNgayDatHangChanging(value);
					this.SendPropertyChanging();
					this._NgayDatHang = value;
					this.SendPropertyChanged("NgayDatHang");
					this.OnNgayDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachHang", DbType="NVarChar(255)")]
		public string TenKhachHang
		{
			get
			{
				return this._TenKhachHang;
			}
			set
			{
				if ((this._TenKhachHang != value))
				{
					this.OnTenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._TenKhachHang = value;
					this.SendPropertyChanged("TenKhachHang");
					this.OnTenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiGiaoHang", DbType="NVarChar(255)")]
		public string DiaChiGiaoHang
		{
			get
			{
				return this._DiaChiGiaoHang;
			}
			set
			{
				if ((this._DiaChiGiaoHang != value))
				{
					this.OnDiaChiGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._DiaChiGiaoHang = value;
					this.SendPropertyChanged("DiaChiGiaoHang");
					this.OnDiaChiGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(20)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiDonHang", DbType="NVarChar(20)")]
		public string TrangThaiDonHang
		{
			get
			{
				return this._TrangThaiDonHang;
			}
			set
			{
				if ((this._TrangThaiDonHang != value))
				{
					this.OnTrangThaiDonHangChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiDonHang = value;
					this.SendPropertyChanged("TrangThaiDonHang");
					this.OnTrangThaiDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongGiaTriDonHang", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TongGiaTriDonHang
		{
			get
			{
				return this._TongGiaTriDonHang;
			}
			set
			{
				if ((this._TongGiaTriDonHang != value))
				{
					this.OnTongGiaTriDonHangChanging(value);
					this.SendPropertyChanging();
					this._TongGiaTriDonHang = value;
					this.SendPropertyChanged("TongGiaTriDonHang");
					this.OnTongGiaTriDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHang_DoanhThu", Storage="_DoanhThus", ThisKey="MaDonHang", OtherKey="MaDonHang")]
		public EntitySet<DoanhThu> DoanhThus
		{
			get
			{
				return this._DoanhThus;
			}
			set
			{
				this._DoanhThus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonDatHang", Storage="_KhachHang", ThisKey="MaKhachHang", OtherKey="MaKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DonDatHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DonDatHangs.Add(this);
						this._MaKhachHang = value.MaKhachHang;
					}
					else
					{
						this._MaKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DoanhThus(DoanhThu entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = this;
		}
		
		private void detach_DoanhThus(DoanhThu entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GioHang")]
	public partial class GioHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGioHang;
		
		private System.Nullable<int> _MaKhachHang;
		
		private System.Nullable<int> _MaHoa;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<Hoa> _Hoa;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGioHangChanging(int value);
    partial void OnMaGioHangChanged();
    partial void OnMaKhachHangChanging(System.Nullable<int> value);
    partial void OnMaKhachHangChanged();
    partial void OnMaHoaChanging(System.Nullable<int> value);
    partial void OnMaHoaChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public GioHang()
		{
			this._Hoa = default(EntityRef<Hoa>);
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGioHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaGioHang
		{
			get
			{
				return this._MaGioHang;
			}
			set
			{
				if ((this._MaGioHang != value))
				{
					this.OnMaGioHangChanging(value);
					this.SendPropertyChanging();
					this._MaGioHang = value;
					this.SendPropertyChanged("MaGioHang");
					this.OnMaGioHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="Int")]
		public System.Nullable<int> MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoa", DbType="Int")]
		public System.Nullable<int> MaHoa
		{
			get
			{
				return this._MaHoa;
			}
			set
			{
				if ((this._MaHoa != value))
				{
					if (this._Hoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoaChanging(value);
					this.SendPropertyChanging();
					this._MaHoa = value;
					this.SendPropertyChanged("MaHoa");
					this.OnMaHoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hoa_GioHang", Storage="_Hoa", ThisKey="MaHoa", OtherKey="MaHoa", IsForeignKey=true)]
		public Hoa Hoa
		{
			get
			{
				return this._Hoa.Entity;
			}
			set
			{
				Hoa previousValue = this._Hoa.Entity;
				if (((previousValue != value) 
							|| (this._Hoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hoa.Entity = null;
						previousValue.GioHangs.Remove(this);
					}
					this._Hoa.Entity = value;
					if ((value != null))
					{
						value.GioHangs.Add(this);
						this._MaHoa = value.MaHoa;
					}
					else
					{
						this._MaHoa = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hoa");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_GioHang", Storage="_KhachHang", ThisKey="MaKhachHang", OtherKey="MaKhachHang", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.GioHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.GioHangs.Add(this);
						this._MaKhachHang = value.MaKhachHang;
					}
					else
					{
						this._MaKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hoa")]
	public partial class Hoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHoa;
		
		private string _TenHoa;
		
		private string _MoTaHoa;
		
		private decimal _GiaBan;
		
		private int _SoLuongTonKho;
		
		private System.Nullable<int> _MaLoaiHoa;
		
		private System.Nullable<int> _MaMau;
		
		private string _AnhHoa;
		
		private EntitySet<GioHang> _GioHangs;
		
		private EntityRef<MauSac> _MauSac;
		
		private EntityRef<LoaiHoa> _LoaiHoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaChanging(int value);
    partial void OnMaHoaChanged();
    partial void OnTenHoaChanging(string value);
    partial void OnTenHoaChanged();
    partial void OnMoTaHoaChanging(string value);
    partial void OnMoTaHoaChanged();
    partial void OnGiaBanChanging(decimal value);
    partial void OnGiaBanChanged();
    partial void OnSoLuongTonKhoChanging(int value);
    partial void OnSoLuongTonKhoChanged();
    partial void OnMaLoaiHoaChanging(System.Nullable<int> value);
    partial void OnMaLoaiHoaChanged();
    partial void OnMaMauChanging(System.Nullable<int> value);
    partial void OnMaMauChanged();
    partial void OnAnhHoaChanging(string value);
    partial void OnAnhHoaChanged();
    #endregion
		
		public Hoa()
		{
			this._GioHangs = new EntitySet<GioHang>(new Action<GioHang>(this.attach_GioHangs), new Action<GioHang>(this.detach_GioHangs));
			this._MauSac = default(EntityRef<MauSac>);
			this._LoaiHoa = default(EntityRef<LoaiHoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHoa
		{
			get
			{
				return this._MaHoa;
			}
			set
			{
				if ((this._MaHoa != value))
				{
					this.OnMaHoaChanging(value);
					this.SendPropertyChanging();
					this._MaHoa = value;
					this.SendPropertyChanged("MaHoa");
					this.OnMaHoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHoa", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenHoa
		{
			get
			{
				return this._TenHoa;
			}
			set
			{
				if ((this._TenHoa != value))
				{
					this.OnTenHoaChanging(value);
					this.SendPropertyChanging();
					this._TenHoa = value;
					this.SendPropertyChanged("TenHoa");
					this.OnTenHoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaHoa", DbType="NVarChar(255)")]
		public string MoTaHoa
		{
			get
			{
				return this._MoTaHoa;
			}
			set
			{
				if ((this._MoTaHoa != value))
				{
					this.OnMoTaHoaChanging(value);
					this.SendPropertyChanging();
					this._MoTaHoa = value;
					this.SendPropertyChanged("MoTaHoa");
					this.OnMoTaHoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Decimal(10,3) NOT NULL")]
		public decimal GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTonKho", DbType="Int NOT NULL")]
		public int SoLuongTonKho
		{
			get
			{
				return this._SoLuongTonKho;
			}
			set
			{
				if ((this._SoLuongTonKho != value))
				{
					this.OnSoLuongTonKhoChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTonKho = value;
					this.SendPropertyChanged("SoLuongTonKho");
					this.OnSoLuongTonKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiHoa", DbType="Int")]
		public System.Nullable<int> MaLoaiHoa
		{
			get
			{
				return this._MaLoaiHoa;
			}
			set
			{
				if ((this._MaLoaiHoa != value))
				{
					if (this._LoaiHoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiHoaChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiHoa = value;
					this.SendPropertyChanged("MaLoaiHoa");
					this.OnMaLoaiHoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMau", DbType="Int")]
		public System.Nullable<int> MaMau
		{
			get
			{
				return this._MaMau;
			}
			set
			{
				if ((this._MaMau != value))
				{
					if (this._MauSac.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMauChanging(value);
					this.SendPropertyChanging();
					this._MaMau = value;
					this.SendPropertyChanged("MaMau");
					this.OnMaMauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhHoa", DbType="NVarChar(255)")]
		public string AnhHoa
		{
			get
			{
				return this._AnhHoa;
			}
			set
			{
				if ((this._AnhHoa != value))
				{
					this.OnAnhHoaChanging(value);
					this.SendPropertyChanging();
					this._AnhHoa = value;
					this.SendPropertyChanged("AnhHoa");
					this.OnAnhHoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hoa_GioHang", Storage="_GioHangs", ThisKey="MaHoa", OtherKey="MaHoa")]
		public EntitySet<GioHang> GioHangs
		{
			get
			{
				return this._GioHangs;
			}
			set
			{
				this._GioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MauSac_Hoa", Storage="_MauSac", ThisKey="MaMau", OtherKey="MaMau", IsForeignKey=true)]
		public MauSac MauSac
		{
			get
			{
				return this._MauSac.Entity;
			}
			set
			{
				MauSac previousValue = this._MauSac.Entity;
				if (((previousValue != value) 
							|| (this._MauSac.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MauSac.Entity = null;
						previousValue.Hoas.Remove(this);
					}
					this._MauSac.Entity = value;
					if ((value != null))
					{
						value.Hoas.Add(this);
						this._MaMau = value.MaMau;
					}
					else
					{
						this._MaMau = default(Nullable<int>);
					}
					this.SendPropertyChanged("MauSac");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHoa_Hoa", Storage="_LoaiHoa", ThisKey="MaLoaiHoa", OtherKey="MaLoaiHoa", IsForeignKey=true)]
		public LoaiHoa LoaiHoa
		{
			get
			{
				return this._LoaiHoa.Entity;
			}
			set
			{
				LoaiHoa previousValue = this._LoaiHoa.Entity;
				if (((previousValue != value) 
							|| (this._LoaiHoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiHoa.Entity = null;
						previousValue.Hoas.Remove(this);
					}
					this._LoaiHoa.Entity = value;
					if ((value != null))
					{
						value.Hoas.Add(this);
						this._MaLoaiHoa = value.MaLoaiHoa;
					}
					else
					{
						this._MaLoaiHoa = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiHoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.Hoa = this;
		}
		
		private void detach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.Hoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKhachHang;
		
		private System.Nullable<int> _MaDangKy;
		
		private string _TenKhachHang;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private EntitySet<DonDatHang> _DonDatHangs;
		
		private EntitySet<GioHang> _GioHangs;
		
		private EntityRef<DangKy> _DangKy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhachHangChanging(int value);
    partial void OnMaKhachHangChanged();
    partial void OnMaDangKyChanging(System.Nullable<int> value);
    partial void OnMaDangKyChanged();
    partial void OnTenKhachHangChanging(string value);
    partial void OnTenKhachHangChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public KhachHang()
		{
			this._DonDatHangs = new EntitySet<DonDatHang>(new Action<DonDatHang>(this.attach_DonDatHangs), new Action<DonDatHang>(this.detach_DonDatHangs));
			this._GioHangs = new EntitySet<GioHang>(new Action<GioHang>(this.attach_GioHangs), new Action<GioHang>(this.detach_GioHangs));
			this._DangKy = default(EntityRef<DangKy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDangKy", DbType="Int")]
		public System.Nullable<int> MaDangKy
		{
			get
			{
				return this._MaDangKy;
			}
			set
			{
				if ((this._MaDangKy != value))
				{
					if (this._DangKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDangKyChanging(value);
					this.SendPropertyChanging();
					this._MaDangKy = value;
					this.SendPropertyChanged("MaDangKy");
					this.OnMaDangKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachHang", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenKhachHang
		{
			get
			{
				return this._TenKhachHang;
			}
			set
			{
				if ((this._TenKhachHang != value))
				{
					this.OnTenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._TenKhachHang = value;
					this.SendPropertyChanged("TenKhachHang");
					this.OnTenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(20)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonDatHang", Storage="_DonDatHangs", ThisKey="MaKhachHang", OtherKey="MaKhachHang")]
		public EntitySet<DonDatHang> DonDatHangs
		{
			get
			{
				return this._DonDatHangs;
			}
			set
			{
				this._DonDatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_GioHang", Storage="_GioHangs", ThisKey="MaKhachHang", OtherKey="MaKhachHang")]
		public EntitySet<GioHang> GioHangs
		{
			get
			{
				return this._GioHangs;
			}
			set
			{
				this._GioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DangKy_KhachHang", Storage="_DangKy", ThisKey="MaDangKy", OtherKey="MaDangKy", IsForeignKey=true)]
		public DangKy DangKy
		{
			get
			{
				return this._DangKy.Entity;
			}
			set
			{
				DangKy previousValue = this._DangKy.Entity;
				if (((previousValue != value) 
							|| (this._DangKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DangKy.Entity = null;
						previousValue.KhachHangs.Remove(this);
					}
					this._DangKy.Entity = value;
					if ((value != null))
					{
						value.KhachHangs.Add(this);
						this._MaDangKy = value.MaDangKy;
					}
					else
					{
						this._MaDangKy = default(Nullable<int>);
					}
					this.SendPropertyChanged("DangKy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonDatHangs(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DonDatHangs(DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiHoa")]
	public partial class LoaiHoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiHoa;
		
		private string _TenLoaiHoa;
		
		private string _MoTaLoaiHoa;
		
		private EntitySet<Hoa> _Hoas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiHoaChanging(int value);
    partial void OnMaLoaiHoaChanged();
    partial void OnTenLoaiHoaChanging(string value);
    partial void OnTenLoaiHoaChanged();
    partial void OnMoTaLoaiHoaChanging(string value);
    partial void OnMoTaLoaiHoaChanged();
    #endregion
		
		public LoaiHoa()
		{
			this._Hoas = new EntitySet<Hoa>(new Action<Hoa>(this.attach_Hoas), new Action<Hoa>(this.detach_Hoas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiHoa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiHoa
		{
			get
			{
				return this._MaLoaiHoa;
			}
			set
			{
				if ((this._MaLoaiHoa != value))
				{
					this.OnMaLoaiHoaChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiHoa = value;
					this.SendPropertyChanged("MaLoaiHoa");
					this.OnMaLoaiHoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiHoa", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TenLoaiHoa
		{
			get
			{
				return this._TenLoaiHoa;
			}
			set
			{
				if ((this._TenLoaiHoa != value))
				{
					this.OnTenLoaiHoaChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiHoa = value;
					this.SendPropertyChanged("TenLoaiHoa");
					this.OnTenLoaiHoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaLoaiHoa", DbType="NVarChar(255)")]
		public string MoTaLoaiHoa
		{
			get
			{
				return this._MoTaLoaiHoa;
			}
			set
			{
				if ((this._MoTaLoaiHoa != value))
				{
					this.OnMoTaLoaiHoaChanging(value);
					this.SendPropertyChanging();
					this._MoTaLoaiHoa = value;
					this.SendPropertyChanged("MoTaLoaiHoa");
					this.OnMoTaLoaiHoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHoa_Hoa", Storage="_Hoas", ThisKey="MaLoaiHoa", OtherKey="MaLoaiHoa")]
		public EntitySet<Hoa> Hoas
		{
			get
			{
				return this._Hoas;
			}
			set
			{
				this._Hoas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hoas(Hoa entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHoa = this;
		}
		
		private void detach_Hoas(Hoa entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHoa = null;
		}
	}
}
#pragma warning restore 1591
